[{"title":"搭建一个简单的博客（hexo AND github）","url":"/2023/10/27/First%20blog/","content":"Welcome to my blog!相遇即是缘分！通过这篇博客你将学习到如何简单地搭建博客\n检查自己的git和Node.js有没有装好，有没有github账户git安装及使用Node.js安装\n检查是否安装成功（打开cmd输入以下两行命令）git --versionnpm --version\n\n安装hexo详情请见hexo文档\nnpm install -g hexo-cli \n\n创建博客创建在本地右键新建一个空文件夹并进入右键选择“Open Git Bash Here”输入以下命令(初始化hexo)\nhexo init\n本地浏览分别输入下面两行命令（生成并启动）\nhexo ghexo s\n进入http://localhost:4000即可看到在本地运行的blog了\n优化下载主题到themes中去寻找自己喜欢的主题并下载下来可使用clone命令或下载zip并解压到根目录/themes下，下面是我自己用的\ngit clone https://github.com/Yue-plus/hexo-theme-arknights.git themes/arknights\n\n记得看README.md(如果主题加载不出来，可以去看看说明)\n\n修改配置文件语言（_config.yml）language: zh-CN\nthemes（_config.yml）\n把themes&#x2F;arknights&#x2F;下的_config.yml剪切到根目录下的_config.arknights.yml(如果没有请自行创建)\n\ntheme: arknights\n站内搜索(有些主题可能自带搜索框这个功能)npm install hexo-generator-searchdb --save\n（_config.arknights.yml）\nsearch:    use: local    swiftype_key: \n(_config.yml)\nsearch:    path: search.xml    field: all\n\n部署\n创建库（名为 用户名.github.io）分别输入下面两行命令\n\ngit config --global user.name &quot;用户名&quot;git config --global user.email &quot;注册邮箱&quot;\n\n关于ssh配置，请看git连接安装hexo-deployer-git\n\nnpm install hexo-deployer-git --save\n\n修改_config.yml\n\nurl: https://username.github.iodeploy:  type: git  repo: 你建的库的地址  branch: master\n\n部署\n\nhexo d\n\n后续调整\n修改本地测试(分别输入下面的指令)\n\nhexo cleanhexo ghexo s\n\n部署到github\n\nhexo d\n\n或者直接\n\nhexo g -d\n\nBy qianqianzykAt 浙江工业大学（屏峰校区）\n","categories":["前置知识"],"tags":["blog","hexo","github"]},{"title":"记录下令自己印象深刻的时刻","url":"/2023/10/29/Second-blog/","content":"2023年10月29日晚，第一次线代单元考70分\nsmjb，我只能呵呵了\n\n2023年10月30日早，大英小组作业第一次上去演讲\n一言难尽，不过最后结果是好的\n\n","categories":["杂记"],"tags":["随心而写"]},{"title":"后端环境配置(持续更新)","url":"/2023/10/31/%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","content":"VSCode 及 Golang 插件的安装\n在搜索引擎中搜索 vscode，进入官方下载网站 https://code.visualstudio.com/\n\n直接单击最大的下载按钮即可进行下载。\n如果下载速度太慢，可以尝试将下载链接中的域名( az764295.vo.msecnd.net )替换为 vscode.cdn.azure.cn\n双击下载的安装包，按照常规的安装流程进行安装\n\n\n可自行选择安装路径，但推荐默认安装\n\n\n\n在安装成功后弹出的主界面上，单击左侧栏第五个按钮打开插件管理器\n\n在搜索栏中搜索go，安装第一个插件\n\nGolang 的安装与配置下载链接：https://golang.google.cn\n正常下载安装\n\n\n\n\n安装成功后，可以通过 Win+R 快捷键输入 cmd 打开终端，输入 go 并敲下回车，查看 Path 环境变量是否有被自动配置好\n\n\n并顺势复制以下命令配置境内的镜像源（这部很重要）\ngo env -w GO111MODULE=ongo env -w GOPROXY=https://goproxy.cn,direct\n\n配置完后重新打开 VSCode 按住 Ctrl+Shift+P 输入 Go:Install&#x2F;Update Tools\n\n点击后全选\n\n点击确定后等待安装完毕即可\n\n编写第一个 Go 程序\n打开文件夹\n新建文件\n将文件重命名为 main.go\n\n\n\n打开终端（终端-&gt;新建终端 或者 输入 Ctrl+Shift+` 快捷键）\n输入 go mod init [name] 来初始化 Go 应用，name 名字可以自己取\n\n\n然后在 main 文件中粘贴下面代码\npackage mainimport &quot;fmt&quot;func main() &#123;    fmt.Println(&quot;Hello World&quot;)&#125;\n\n在终端输入 go run main.go 即可运行显示结果\n\n安装 MySQL推荐直接从下面两个镜像站下载 MySQL 的离线安装包\nhttps://mirrors.huaweicloud.com/mysql/Downloads/MySQLInstaller/\nhttps://mirrors.aliyun.com/mysql/MySQLInstaller/\n\n请务必确保自己下载的是 mysql-installer-community ，不要下载 web 在线安装版本。\n\n刚点开安装包时可能会在这个界面卡很久，耐心等待即可\n\n随后可能会弹出更新提示，直接选择 No 忽略即可\n随后在安装程序的主页面，选择 Server only，剩下的安装步骤中除了 Root Password（自己要记住，以便不必要的麻烦） 以外全部下一步即可（路径可自行选择，但仍推荐默认）。\n\n随后我们需要将 C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin 加入系统变量中\n\n右键我的电脑，选择属性（或者设置中直接搜环境变量）\n\n单击高级系统设置\n\n选择环境变量\n\n双击当前用户的 Path 变量\n\n单击新建，输入 C:\\Program Files\\MySQL\\MySQL Server 8.0\\bin\n确定后即完成了 mysql 的 Path 变量配置\n\n至此，配置就已经基本完成，你可以进行后端开发了给自己点个赞\n\n配置redisredis官方文档\n站主的电脑是Windows，而redis官方并未提供redis的Windows版本，所以你需要先启用 WSL2（适用于 Linux 的 Windows 子系统）安装WSL的详细说明\n:::details wsl优点\nwsl优点开发人员可以在 Windows 计算机上同时访问 Windows 和 Linux 的强大功能。适用于 Linux 的 Windows 子系统 （WSL） 允许开发人员安装 Linux 发行版（例如 Ubuntu、OpenSUSE、Kali、Debian、Arch Linux 等），并直接在 Windows 上使用 Linux 应用程序、实用程序和 Bash 命令行工具，无需修改，无需传统虚拟机或双启动设置的开销。\n:::\n先决条件你的Windows版本必须是Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11，否则你需要参考手动安装\n命令右键单击并选择“以管理员身份运行”，在管理员模式下打开 PowerShell 或 Windows 命令提示符，输入 wsl --install 命令，然后重新启动计算机。\nwsl --install\n此命令将启用运行 WSL 和安装 Linux 的 Ubuntu 发行版所需的功能可以更改\n安装Redis依赖yum install -y gcc tcl\n\n安装Redis默认使用Ubuntu\ncurl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpgecho &quot;deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main&quot; | sudo tee /etc/apt/sources.list.d/redis.listsudo apt-get updatesudo apt-get install redis\n运行编译命令\nmake &amp;&amp; make install\n如果没有出错，应该就是安装成功了\n:::details 一些简单命令\n\n切换至root用户sudo su\n\n设置root密码passwd root\n\n修改文件vi [文件路径]\n\n查看状态ps -ef | grep redis\n\n停止kill -9 [数字]\n\nredis命令行客户端redis-cli\n\nredis服务端启动脚本redis-serverredis-cli [options] [commonds]\n常见的options：\n\n-h 127.0.0.1  指定IP地址\n\n-p 6379       指定端口\n\n-a 123456     指定访问密码commonds\n\nping          服务器正常返回pong\n\n\n:::\n启动Redis\nsudo service redis-server start\n测试Redis连接\nredis-cli 127.0.0.1:6379&gt; pingPONG\n\n修改配置文件查找redis.conf位置（若已知，则跳过）\nsudo find / -name redis.conf\n复制以防修改错误\ncp redis.conf redis.conf.bck\n修改说明\n\n监听的地址，默认是127.0.0.1，会导致只能在本地访问。修改为0.0.0.0则可以在任意IP访问，生产环境下不要设置为0.0.0.0\n\nbind 0.0.0.0\n\n守护进程，修改为yes后可在后台运行\n\ndaemonize yes\n\n密码，设置后访问Redis必须输入密码\n\nrequirepass 123321\n\n监听的端口\n\nport 6379\n\n工作目录，默认是当前目录，也就是运行redis-server时的命令，日志，持久化等文件会保存在这个目录\n\ndir .\n\n数据库数量，设置为1，代表只使用一个库，默认有16个，编号为0-15\n\ndatabase 1\n\n设置redis能够使用的最大内存\n\nmaxmemory 512mb\n\n日志文件，默认为空，不记录日志，可以指定日志文件名\n\nlogfile “redis.log”\n\n\n输入i就可以改配置了，然后查找配置先按ESC键，再按&#x2F;，输入你想查的，按n可以查下一个关键词，要改继续按i，改完之后按ESC，打:wq即可退出配置文件\nvi redis.conf\n启动\nredis-server redis.conf\n杀死进程\nkill -9 数字\n\n开机自启有需要的小伙伴可以上网搜索以下\n安装可视化工具Redis Desktop ManagerMedisAnotherRedisDesktopManagerRedis Insight\nredis连接vscode单击左侧栏第五个按钮打开插件管理器搜索Database Client，下载即可安装成功后，会在左侧显示Database和NOSQL图标\n\n选择NOSQL\n选择需要选择的类型（redis）\n填写相应的配置即可温馨提示：若是认为配置无误，却一直连接不上，不妨试试重启。站主连接的时候因为密码而连接不上，但第二天再试的时候发现又可以了。\n\n","categories":["前置知识"],"tags":["vscode","go","mysql","redis"]},{"title":"关于本站的说明","url":"/2023/10/31/%E8%AF%B4%E6%98%8E/","content":"本站已停用，请移步至qianqianzyk.top","categories":["声明"]}]